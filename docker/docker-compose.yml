services:
  redis:
    image: redis:latest
    container_name: redis-server
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      - cdn_network

  nginx:
    image: nginx:latest
    container_name: nginx-server
    ports:
      - "8080:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - cdn-node1
      - cdn-node2
      - cdn-node3
    networks:
      - cdn_network

  cdn-node1:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: cdn-node1
    environment:
      - NODE_NAME=cdn-node1
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - cdn_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 5

  cdn-node2:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: cdn-node2
    environment:
      - NODE_NAME=cdn-node2
    ports:
      - "8082:8081"
    depends_on:
      - redis
    networks:
      - cdn_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 5

  cdn-node3:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: cdn-node3
    environment:
      - NODE_NAME=cdn-node3
    ports:
      - "8083:8081"
    depends_on:
      - redis
    networks:
      - cdn_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  cdn_network:
    driver: bridge